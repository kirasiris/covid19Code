{"version":3,"sources":["components/public/NavBar.js","components/public/Footer.js","components/public/Layout.js","components/public/Spinner.js","components/public/HomePage.js","actions/covid.js","actions/types.js","components/public/NotFound.js","components/routing/PublicRoutes.js","reducers/covid.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","Navbar","bg","expand","Brand","href","Footer","style","backgroundColor","Container","fluid","className","Row","Col","xl","target","rel","Layout","title","description","postImage","postId","postSlug","meta","robots","termIds","canonical","url","author","createdAt","updatedAt","locales","posType","sectionClass","containerClass","cssLink","jsLink","children","charset","name","content","length","map","locale","property","term","media","src","crossorigin","id","Spinner","animation","width","height","role","connect","state","covid","getSummary","dispatch","a","config","headers","axios","get","res","type","payload","data","msg","response","statusText","status","getConfirmed","secPayload","getRecovered","thirdPayload","getDeaths","fourthPayload","withRouter","summary","confirmed","recovered","deaths","loading","useEffect","sm","Card","Header","Body","Cases","overflow","ListGroup","variant","c","i","Item","key","format","moment","utc","Date","ResponsiveEmbed","aspectRatio","frameBorder","scrolling","marginHeight","marginWidth","TotalConfirmed","reduce","prev","next","TotalRecovered","TotalDeaths","Table","striped","bordered","hover","Country","NewConfirmed","NewRecovered","NewDeaths","exact","path","component","HomePage","NotFound","initialState","date","error","combineReducers","action","Countries","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Public","match","PublicRoutes","App","basename","process","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e362dd5d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// REACT-BOOTSTRAP\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nconst NavBar = props => {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n  <Navbar.Brand href=\"#!\">COVID19 en Mexico</Navbar.Brand>\r\n</Navbar>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// REACT-BOOTSTRAP\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nconst Footer = props => {\r\n  return (\r\n    <footer style={{backgroundColor: 'rgba(0,0,0,.03)'}}>\r\n      <Container fluid className={`text-center pt-3 pb-3`}>\r\n        <Row>\r\n          <Col xl={`12`}>\r\n            Hecho por <a href={`https://kevinurielfonseca.com/`} target={`_blank`} rel={`noopener noreferer`}>Kevin</a>. Informacion obtenida de <a href={`https://github.com/CSSEGISandData/COVID-19`} target={`_blank`} rel={`noopener noreferer`}>Novel Coronavirus (COVID-19) Cases, provided by JHU CSSE</a>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\n/*\r\n *\r\n * COMPONENTS\r\n *\r\n */\r\nimport Navbar from './NavBar';\r\nimport Footer from './Footer';\r\n\r\nconst Layout = ({\r\n  title = 'Title',\r\n  description = 'Description',\r\n  postImage = '',\r\n  postId = '1',\r\n  postSlug = 'post-uno',\r\n  meta = [],\r\n  robots = '',\r\n  termIds = [],\r\n  canonical = 'https://befree.io',\r\n  url = '',\r\n  author = 'kirasiris',\r\n  createdAt = '',\r\n  updatedAt = '',\r\n  locales = '',\r\n  posType = 'post',\r\n  sectionClass = '',\r\n  containerClass = '',\r\n  cssLink,\r\n  jsLink,\r\n  children\r\n}) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charset='utf-8' />\r\n        <meta name='viewport' content='width=device-width, initial-scale=1' />\r\n        <meta name='theme-color' content='#FFFFFF' />\r\n        <title>{title}</title>\r\n        <meta name='description' content={`${description}`}></meta>\r\n        <meta name='robots' content={`${robots}`} />\r\n        <link rel='canonical' href={`${canonical}`} />\r\n        {locales &&\r\n          locales.length > 0 &&\r\n          locales.map(locale => {\r\n            return <meta property='og:locale' content={`${locale}`} />;\r\n          })}\r\n        <meta property='og:type' content={`${posType}`} />\r\n        <meta property='og:title' content={`${title}`} />\r\n        <meta property='og:description' content={`${description}`} />\r\n        <meta property='og:url' content={`${canonical + `/` + url}`} />\r\n        <meta property='og:site_name' content={`${title}`} />\r\n        <meta property='article:author' content={`${author}`} />\r\n        {termIds &&\r\n          termIds.length > 0 &&\r\n          termIds.map(term => {\r\n            return <meta property='article:tag' content={`${term}`} />;\r\n          })}\r\n        <meta property='article:section' content='Programming' />\r\n        <meta property='article:published_time' content={`${createdAt}`} />\r\n        <meta property='article:modified_time' content={`${updatedAt}`} />\r\n        <meta property='og:updated_time' content={`${updatedAt}`} />\r\n        <meta property='og:image' content={`${postImage}`} />\r\n        <meta property='og:image:secure_url' content={`${postImage}`} />\r\n        <meta property='og:image:width' content='1873' />\r\n        <meta property='og:image:height' content='900' />\r\n        <meta name='twitter:card' content='summary_large_image' />\r\n        <meta name='twitter:description' content={`${description}`} />\r\n        <meta name='twitter:title' content={`${title}`} />\r\n        <meta name='twitter:site' content={`@kirasiris`} />\r\n        <meta name='twitter:image' content={`${postImage}`} />\r\n        <meta name='twitter:creator' content={`@kirasiris`} />\r\n        {cssLink && (\r\n          <link rel='stylesheet' href={`${cssLink}`} media='all'></link>\r\n        )}\r\n        {jsLink && <script src={`${jsLink}`} crossorigin='anonymous'></script>}\r\n      </Helmet>\r\n      <main className='wrapper'>\r\n        <Navbar />\r\n        <div id='content'>\r\n          <section className={`${sectionClass}`}>\r\n            <div className={`${containerClass}`}>{children}</div>\r\n          </section>\r\n          <Footer />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nexport default () => (\r\n  <>\r\n    <div className='d-flex justify-content-center' id='spinner'>\r\n      <Spinner\r\n        animation='border'\r\n        style={{ width: '3rem', height: '3rem' }}\r\n        role='status'\r\n      >\r\n        <span className='sr-only'>Loading...</span>\r\n      </Spinner>\r\n    </div>\r\n  </>\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n// ACTIONS\r\nimport {\r\n  getSummary,\r\n  getConfirmed,\r\n  getRecovered,\r\n  getDeaths\r\n} from '../../actions/covid';\r\n// COMPONENTS\r\nimport Layout from './Layout';\r\nimport Spinner from './Spinner';\r\n// REACT-BOOTSTRAP\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport ResponsiveEmbed from 'react-bootstrap/ResponsiveEmbed'\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nconst HomePage = ({\r\n  getSummary,\r\n  getConfirmed,\r\n  getRecovered,\r\n  getDeaths,\r\n  covid: { summary, confirmed, recovered, deaths, loading }\r\n}) => {\r\n  useEffect(() => {\r\n    getSummary();\r\n    getConfirmed();\r\n    getRecovered();\r\n    getDeaths();\r\n  }, []);\r\n\r\n  return (\r\n    <Layout\r\n      title={`COVID19 en Mexico`}\r\n      description={`Enterate de las ultimas estadisticas conforme a esta exagerada situacion en la que vivimos`}\r\n      sectionClass={`mb-3`}\r\n      containerClass={`container-fluid`}\r\n    >\r\n      {loading || !summary || !confirmed || !recovered || !deaths || summary == [] || confirmed == [] || recovered == [] || deaths == [] ? (\r\n        <Spinner />\r\n      ) : (\r\n        <>\r\n        <section className={`mb-3`}>\r\n        <h2 className={`text-center`}>Estadisticas en Mexico</h2>\r\n          <Row>\r\n          <Col xl={`3`} sm={`3`}>\r\n            <Card className={`mb-3`}>\r\n              <Card.Header>Casos Activos</Card.Header>\r\n              <Card.Body>\r\n              {(confirmed && confirmed.length > 0 && confirmed[confirmed.length - 1].Cases) - (recovered && recovered.length > 0 && recovered[recovered.length - 1].Cases) - (deaths && deaths.length > 0 && deaths[deaths.length - 1].Cases)}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col xl={`3`} sm={`3`}>\r\n            <Card className={`mb-3`}>\r\n              <Card.Header>Casos Confirmados</Card.Header>\r\n              <Card.Body style={{ overflow: 'auto' }}>\r\n                {confirmed && confirmed.length > 0 && confirmed[confirmed.length - 1].Cases}\r\n              </Card.Body>\r\n            </Card>\r\n            </Col>\r\n            <Col xl={`3`} sm={`3`}>\r\n            <Card className={`mb-3`}>\r\n              <Card.Header>Casos Recuperados</Card.Header>\r\n              <Card.Body style={{ overflow: 'auto' }}>\r\n                {recovered && recovered.length > 0 && recovered[recovered.length - 1].Cases}\r\n              </Card.Body>\r\n            </Card>\r\n            </Col>\r\n            <Col xl={`3`} sm={`3`}>\r\n            <Card className={`mb-3`}>\r\n              <Card.Header>Casos de Muerte</Card.Header>\r\n              <Card.Body style={{ overflow: 'auto' }}>\r\n                {deaths && deaths.length > 0 && deaths[deaths.length - 1].Cases}\r\n              </Card.Body>\r\n            </Card>\r\n            </Col>\r\n            <Col xl={`4`} sm={`4`}>\r\n            <Card>\r\n              <Card.Header>Casos Confirmados por Fecha</Card.Header>\r\n              <Card.Body style={{ overflow: 'auto' }} className={`p-0`}>\r\n                <ListGroup variant='flush' style={{ height: '250px' }}>\r\n                  {confirmed && confirmed.length > 0 && confirmed.map((c, i) => (\r\n                    <ListGroup.Item key={i}>\r\n                      {c.Cases} on{' '}\r\n                      <Moment format='YYYY/MM/DD'>{moment.utc(c.Date)}</Moment>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n            <Col xl={`4`} sm={`4`}>\r\n            <Card>\r\n              <Card.Header>Casos Recuperados por Fecha</Card.Header>\r\n              <Card.Body style={{ overflow: 'auto' }} className={`p-0`}>\r\n                <ListGroup variant='flush' style={{ height: '250px' }}>\r\n                  {recovered && recovered.length > 0 && recovered.map((c, i) => (\r\n                    <ListGroup.Item key={i}>\r\n                      {c.Cases} on{' '}\r\n                      <Moment format='YYYY/MM/DD'>{moment.utc(c.Date)}</Moment>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n            <Col xl={`4`} sm={`4`}>\r\n            <Card>\r\n              <Card.Header>Casos de Muerte por Fecha</Card.Header>\r\n              <Card.Body style={{ overflow: 'auto' }} className={`p-0`}>\r\n                <ListGroup variant='flush' style={{ height: '250px' }}>\r\n                  {deaths && deaths.length > 0 && deaths.map((c, i) => (\r\n                    <ListGroup.Item key={i}>\r\n                      {c.Cases} on{' '}\r\n                      <Moment format='YYYY/MM/DD'>{moment.utc(c.Date)}</Moment>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          </Row>\r\n        </section>\r\n        <section>\r\n        <h2 className={`text-center`}>Estadisticas Universales</h2>\r\n        <Row>\r\n          <Col xl={`12`}>\r\n            <Card className={`mb-3`}>\r\n              <Card.Header>Mapa Mundial</Card.Header>\r\n              <Card.Body className={`p-0`}>\r\n                <ResponsiveEmbed aspectRatio=\"21by9\">\r\n                  <iframe  frameBorder={`0`} scrolling={`0`} marginHeight={`0`} marginWidth={`0`} title={`2019-nCoV`} src={`//gisanddata.maps.arcgis.com/apps/Embed/index.html?webmap=14aa9e5660cf42b5b4b546dec6ceec7c&extent=23.6345,11.535,102.552,52.8632&zoom=true&previewImage=false&scale=true&disable_scroll=false&theme=light`}></iframe>\r\n                  </ResponsiveEmbed>\r\n              </Card.Body>\r\n            </Card>\r\n            </Col>\r\n            <Col xl={`4`} sm={`4`}>\r\n            <Card className={`mb-3`}>\r\n              <Card.Header>Casos Mundiales Confirmados</Card.Header>\r\n              <Card.Body>\r\n              {summary && summary.length > 0 && summary.map(c=> c.TotalConfirmed).reduce((prev,next)=> prev+next)}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xl={`4`} sm={`4`}>\r\n            <Card className={`mb-3`}>\r\n              <Card.Header>Casos Mundiales Recuperados</Card.Header>\r\n              <Card.Body>\r\n              {summary && summary.length > 0 && summary.map(c=> c.TotalRecovered).reduce((prev,next)=> prev+next)}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n          <Col xl={`4`} sm={`4`}>\r\n            <Card className={`mb-3`}>\r\n              <Card.Header>Casos Mundiales de Muertes</Card.Header>\r\n              <Card.Body>\r\n              {summary && summary.length > 0 && summary.map(c=> c.TotalDeaths).reduce((prev,next)=> prev+next)}\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n            <Col xl={`12`}>\r\n            <Card className={`mb-3`}>\r\n              <Card.Header>Casos en todo el Mundo</Card.Header>\r\n              <Card.Body style={{ height: '500px', overflow: 'auto' }} className={`p-0`}>\r\n                <Table striped bordered hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Ciudad</th>\r\n                      <th>Nuevos Casos Confirmados</th>\r\n                      <th>Casos Confirmados Totales</th>\r\n                      <th>Nuevos Casos Recuperados</th>\r\n                      <th>Casos Recuperados Totales</th>\r\n                      <th>Nuevos Casos de Muerte</th>\r\n                      <th>Casos de Muerte Totales</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {summary && summary.length > 0 && summary.map((c, i) => (\r\n                      <tr key={i}>\r\n                        <td>{c.Country}</td>\r\n                        <td>{c.NewConfirmed}</td>\r\n                        <td>{c.TotalConfirmed}</td>\r\n                        <td>{c.NewRecovered}</td>\r\n                        <td>{c.TotalRecovered}</td>\r\n                        <td>{c.NewDeaths}</td>\r\n                        <td>{c.TotalDeaths}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                  <tfoot>\r\n                    <tr>\r\n                      <th>Ciudad</th>\r\n                      <th>Nuevos Casos Confirmados</th>\r\n                      <th>Casos Confirmados Totales</th>\r\n                      <th>Nuevos Casos Recuperados</th>\r\n                      <th>Casos Recuperados Totales</th>\r\n                      <th>Nuevos Casos de Muerte</th>\r\n                      <th>Casos de Muerte Totales</th>\r\n                    </tr>\r\n                  </tfoot>\r\n                </Table>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        </section>\r\n        </>\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nHomePage.propTypes = {\r\n  getSummary: PropTypes.func.isRequired,\r\n  getConfirmed: PropTypes.func.isRequired,\r\n  getRecovered: PropTypes.func.isRequired,\r\n  getDeaths: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  covid: state.covid\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getSummary,\r\n  getConfirmed,\r\n  getRecovered,\r\n  getDeaths\r\n})(withRouter(HomePage));\r\n","import axios from 'axios';\r\nimport {\r\n  GET_SUMMARY,\r\n  CLEAR_POST,\r\n  FETCH_ERROR,\r\n  GET_CONFIRMED,\r\n  GET_RECOVERED,\r\n  GET_DEATHS\r\n} from './types';\r\n\r\n// @route       GET api/v1/posts/timeline\r\n// @description Get all posts by the users loggedIn user is following\r\n// @access      Private\r\n// @task        DONE\r\nexport const getSummary = () => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    };\r\n    const res = await axios.get(`https://api.covid19api.com/summary`, null, config);\r\n    return dispatch({\r\n      type: GET_SUMMARY,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    \r\n    return dispatch({\r\n      type: FETCH_ERROR,\r\n      payload: { msg: err.response && err.response.statusText, status: err.response && err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// @route       GET https://api.covid19api.com/country/mexico/status/confirmed/live\r\n// @description Returns cases confirmed every 10 mins\r\n// @access      Private\r\n// @task        DONE\r\nexport const getConfirmed = () => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    };\r\n    const res = await axios.get(`https://api.covid19api.com/country/mexico/status/confirmed/live`,null,config);\r\n    return dispatch({\r\n      type: GET_CONFIRMED,\r\n      secPayload: res.data\r\n    });\r\n  } catch (err) {\r\n\r\n    return dispatch({\r\n      type: FETCH_ERROR,\r\n      secPayload: { msg: err.response && err.response.statusText, status: err.response && err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// @route       GET https://api.covid19api.com/country/mexico/status/recovered/live\r\n// @description Returns cases recovered every 10 mins\r\n// @access      Private\r\n// @task        DONE\r\nexport const getRecovered = () => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    };\r\n    const res = await axios.get(`https://api.covid19api.com/country/mexico/status/recovered/live`, null, config);\r\n    return dispatch({\r\n      type: GET_RECOVERED,\r\n      thirdPayload: res.data\r\n    });\r\n  } catch (err) {\r\n\r\n    return dispatch({\r\n      type: FETCH_ERROR,\r\n      thirdPayload: { msg: err.response && err.response.statusText, status: err.response && err.response.status }\r\n    });\r\n  }\r\n};\r\n\r\n// @route       GET https://api.covid19api.com/country/mexico/status/deaths/live\r\n// @description Returns death cases every 10 mins\r\n// @access      Private\r\n// @task        DONE\r\nexport const getDeaths = () => async dispatch => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    };\r\n\r\n    const res = await axios.get(`https://api.covid19api.com/country/mexico/status/deaths/live`,null,config);\r\n    return dispatch({\r\n      type: GET_DEATHS,\r\n      fourthPayload: res.data\r\n    });\r\n  } catch (err) {\r\n    return dispatch({\r\n      type: FETCH_ERROR,\r\n      fourthPayload: { msg: err.response && err.response.statusText, status: err.response && err.response.status }\r\n    });\r\n  }\r\n};\r\n","// COVID\r\nexport const GET_SUMMARY = 'GET_SUMMARY';\r\nexport const GET_CONFIRMED = 'GET_CONFIRMED';\r\nexport const GET_RECOVERED = 'GET_RECOVERED';\r\nexport const GET_DEATHS = 'GET_DEATHS';\r\nexport const FETCH_ERROR = 'FETCH_ERROR';\r\nexport const CLEAR_POST = 'CLEAR_POST';\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n// ACTIONS\r\n// HELPERS\r\n// UTILS\r\n// REACTBOOTSTRAP\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <section className='mb-3'>\r\n      <div className='container-fluid m-0 text-center error404'>\r\n        <h1 className='display-3'>404</h1>\r\n        <p className='lead'>Page Not Found</p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nNotFound.propTypes = {};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nexport default connect(null, {})(withRouter(NotFound));\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n// GLOBALS\r\nimport HomePage from '../public/HomePage';\r\nimport NotFound from '../public/NotFound';\r\n\r\nconst PublicRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={HomePage} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nPublicRoutes.propTypes = {};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nexport default connect(null, {})(PublicRoutes);\r\n","import {\r\n  FETCH_ERROR,\r\n  GET_SUMMARY,\r\n  GET_CONFIRMED,\r\n  GET_RECOVERED,\r\n  GET_DEATHS\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  summary: [],\r\n  confirmed: [],\r\n  recovered: [],\r\n  deaths: [],\r\n  date: null,\r\n  loading: true,\r\n  error: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  const { type, payload, secPayload, thirdPayload, fourthPayload } = action;\r\n\r\n  switch (type) {\r\n    case GET_SUMMARY:\r\n      return {\r\n        ...state,\r\n        summary: payload.Countries,\r\n        date: payload.Date,\r\n        loading: false\r\n      };\r\n    case GET_CONFIRMED:\r\n      return {\r\n        ...state,\r\n        confirmed: secPayload\r\n      };\r\n\r\n    case GET_RECOVERED:\r\n      return {\r\n        ...state,\r\n        recovered: thirdPayload\r\n      };\r\n    case GET_DEATHS:\r\n      return {\r\n        ...state,\r\n        deaths: fourthPayload\r\n      };\r\n    case FETCH_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport covid from './covid';\r\n\r\nexport default combineReducers({\r\n  covid\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\n// Prevent auth error on first run of subscription\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n/*\n *\n * ROUTES\n *\n */\nimport PublicRoutes from './components/routing/PublicRoutes';\n// Redux\nimport store from './store';\n/*\n *\n * STATIC FILES\n *\n */\nimport './assets/css/bootstrap.min.css';\nimport './App.css';\nconst Public = ({ match }) => <Route component={PublicRoutes} />;\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n        <Switch>\n          <Route path='/' component={Public} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('putoelquelolea'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}